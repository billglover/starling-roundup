AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: |
  starling-roundup
  Sample SAM Template for starling-roundup
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Handler: main
    Runtime: go1.x

Resources:
  WebHookHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: me.billglover.starling
        Key: hook.zip
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: Table
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /callback
            Method: POST
      Environment:
        Variables:
          STARLING_TABLE:
            Ref: Table
          STARLING_REGION:
            Ref: 'AWS::Region'
  RecordHandler:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: me.billglover.starling
        Key: record.zip
      Policies:
        - DynamoDBStreamReadPolicy:
            TableName:
              Ref: Table
            StreamName: 
              Fn::GetAtt: [Table, StreamArn]
        - DynamoDBCrudPolicy:
            TableName:
              Ref: Table
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt: [Table, StreamArn]
            BatchSize: 1
            StartingPosition: TRIM_HORIZON
  Table:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions: 
        - AttributeName: uid
          AttributeType: S
      KeySchema: 
        - AttributeName: uid
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  WebHook:
    Description: The web-hook you need to provide to Starling Bank
    Value:
      'Fn::Sub': >-
        https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/callback/
    Export:
      Name: StarlingWebHook
  MyStacksRegion:
    Value:
      Ref: 'AWS::Region'
